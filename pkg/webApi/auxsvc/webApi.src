use uo;
use basic;
use os;

include ":webApi:settings";
include ":instances:instances";
include ":spawnnet:spawnnet";
include "include/names";
include "include/mobile/npcs/name";

program webApi(connection)
	var settings := GetSettingsCfgElem( "Settings" );

	while ( connection )
		var event := Wait_For_Event(5);
		if ( event )
			var val := event.value;
			var passwd := val[1];
			var param := val[2];
			
			if ( settings.WebApiPass != passwd )
				connection.Transmit(array{"Error", "Invalid webApi password."});
				return 0;
			endif
			
			case(param)
        "status": connection.transmit(ServerStats());
        "online": connection.transmit(ServerOnline());
		"instances": connection.transmit(InstanceStatus());
		//"message": SendMessage(nick, text);
        default: connection.transmit(0);
      endcase
			
		return 1;
		else
			connection.Transmit(array{"Error", "Connection timed out."});
			return 0;
		endif
	endwhile
endprogram

function ServerStats()
    var settings := GetSettingsCfgElem( "Settings" );
    var retvalue := array;
    retvalue.append(CStr(len(ListAccounts())));
    retvalue.append(CStr(polcore().uptime));
    var tot := 0;
    foreach char in EnumerateOnlineCharacters()
            tot := tot+1;
    endforeach

	// fake ass status to atract players
    if(tot > 3 && tot < 5)
		tot := tot + 1;
    elseif(tot >= 5 && tot < 8)
		tot := tot + 3;
    elseif(tot >= 8)
		tot := tot + 4;
    endif

    retvalue.append(CStr(tot));

    return retvalue;
endfunction

function ServerOnline()

    var retvalue := array;
	
    foreach char in EnumerateOnlineCharacters()
	
		if(char.cmdlevel)
			retvalue.append(CStr(char.serial)+"|"+CStr(AssignName("", MALE_IDX))+"|"+CSTr(POLCore().systime)+"|"+CStr(char.cmdlevel));
		else
			if(!GetObjProperty(char, "online_anonymous"))
				retvalue.append(CStr(char.serial)+"|"+CStr(AssignName("", MALE_IDX))+"|"+CSTr(POLCore().systime)+"|"+CStr(char.cmdlevel));
			else
				retvalue.append(CStr(char.serial)+"|"+CStr(char.name)+"|"+CSTr(POLCore().systime)+"|"+CStr(char.cmdlevel));
			endif
		endif
			
    endforeach

    return retvalue;
endfunction

function InstanceStatus()

	var retvalue := array;
	
	foreach stone in GetInstanceStoneSerials()
		var stoneItem := SystemFindObjectBySerial(stone);
		if(stoneItem)
			var status := GetInstanceStatus(stoneItem);
			var statusString := GetStatusString(stoneItem);
			
			var lastRun := CInt(GetObjProperty(stoneItem, "LastRun"));
			var lastChange := ReadGameClock() - lastRun;

			if(status == INSTANCE_STATUS_RUNNING)
				retvalue.append(GetInstanceName(stoneItem) + "|" + statusString + "|" + GetCurrentNumberOfSpawns(stoneItem) + "|" + GetMaxNumberOfSpawns(stoneItem) + "|" +lastChange);
			else
				retvalue.append(GetInstanceName(stoneItem) + "|" + statusString + "|0|0|" + lastChange);
			endif
			
		endif
		
	endforeach
	
	return retvalue;

endfunction

function SendMessage(nick, text)

	foreach character in EnumerateOnlineCharacters()
		if(!GetObjProperty(character, "DiscordMute"))
			SendSysMessage(character, "[Discord]: " + nick + " -> " + text, FONT_NORMAL, COLOR_BLUE); 
		endif
	endforeach
	
endfunction